{"id":"ejercicios/this.html","dependencies":[{"name":"/home/jeyfredc/Documentos/Cursos-platzi/Typescript-Comp-Js-Prof./package.json","includedInParent":true,"mtime":1607025349224}],"generated":{"html":"<html>\n    <head>\n        <title>This</title>\n    </head>\n\n    <body>\n        <a href=\"/ejercicios/\">Go Back</a>\n        <p><em>Abre la consola</em></p>\n\n        <h1>\n            <code>this</code> se refiere a un objeto. Ese objeto es el que actualmente está ejecutando un pedazo de código</h1>\n\n        <script>// this en el scope global\nconsole.log(`this: ${this}`); //this en el scope de una funcion\n\nfunction whoIsThis() {\n  return this;\n}\n\nconsole.log(`whoIsThis(): ${whoIsThis()}`); // this en el scope de una funcion en strict mode\n\nfunction whoIsThisStrict() {\n  \"use strict\";\n\n  return this;\n}\n\nconsole.log(`whoIsThisSctrict(): ${whoIsThisStrict()}`); // this en el contexto de un objeto\n\nconst person = {\n  name: 'Jeyfred',\n\n  saludar() {\n    console.log(`Hola soy ${this.name}`);\n  }\n\n};\nperson.saludar(); // this cuando sacamos una funcion de un objeto\n\nconst accion = person.saludar;\naccion(); // this en el contexto de una clase\n\nclass Person {\n  constructor(name) {\n    this.name = name;\n  }\n\n  saludar() {\n    console.log(`Me llamo ${this.name}`);\n  }\n\n}\n\nconst carlos = new Person('carlos');\ncarlos.saludar();</script>\n    </body>\n</html>"},"sourceMaps":null,"error":null,"hash":"9e5438c45bb4b73ce21ba50f76909a0d","cacheData":{"env":{}}}