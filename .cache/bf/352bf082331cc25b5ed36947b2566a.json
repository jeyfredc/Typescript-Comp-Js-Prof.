{"id":"ejercicios/prototypal-inheritance.html","dependencies":[{"name":"/home/jeyfredc/Documentos/Cursos-platzi/Typescript-Comp-Js-Prof./package.json","includedInParent":true,"mtime":1607025349224}],"generated":{"html":"<html>\n    <head>\n        <title>prototypal-inheritance</title>\n    </head>\n\n    <body>\n        <a href=\"/ejercicios/\">Go Back</a>\n        <p><em>Abre la consola</em></p>\n\n        <h1>\n            <code>SomeObject.prototype</code> es un objeto donde definimos el\n            prototipo de las instancias de <code>SomeObject</code>. Es decir, las\n            instancias de <code>SomeObject</code> van a \"heredar\" de\n            <code>SomeObject.prototype</code>.\n            <br>\n            <br>\n            <code>SomeObject.[[Prototype]]</code> es el prototipo de\n            <code>SomeObject</code>. Es decir, <code>SomeObject</code> \"hereda\" de\n            <code>SomeObject.prototype</code>.\n          </h1>\n\n        <script>function Hero(name) {\n  //const hero = Object.create(Hero.prototype);\n  this.name = name; //return this\n}\n\nHero.prototype.saludar = function () {\n  console.log(`Hola, soy ${this.name}`);\n};\n\nconst ironMan = new Hero('Iron Man'); // propiedades de la instancia\n\nconsole.log(`Name: ${ironMan.name}`); // propiedades de la clase\n\nconsole.log(`saludar: ${ironMan.saludar}`); // propiedades heredadas ej: toString\n\nconsole.log(`ToString: ${ironMan.toString}`); // hasOwnProperty (de donde sale toString o esto?)\n\nconsole.log(`ironMan.hasOwnProperty(\"saludar\"): ${ironMan.hasOwnProperty(\"saludar\")}`); // inspeccionemos el prototipo de ironMan\n// inspeccionemos el prototipo de gamora\n// inspeccionemos el prototipo del Object</script>\n    </body>\n</html>"},"sourceMaps":null,"error":null,"hash":"01c39b1fb8c8a65073a3e071113e0398","cacheData":{"env":{}}}